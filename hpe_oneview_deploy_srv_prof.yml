---
- hosts: target_hosts
  gather_facts: no

  vars:

  tasks:
# only needed for rack-mount servers
# instead ov_hardware_name from inventory
#    # reads local file no matter what you delegate
#    - name: read ov_hardware_names from file
#      include_vars:
#        file: "/tmp/oneview_deployment.state"
#        name: ovhostnamelist
#
#    - name: extract ov_hardware_name
#      set_fact: 
#        ov_hardware_name: "{{  ovhostnamelist[inventory_hostname] }}"
    
    - name: print out the ov_hardware_name
      debug:
        msg: "ov_hardware_name:  {{ ov_hardware_name }}"
      
    - fail:
        msg: "You need to define ov_hardware_name for each host which should be deployed via this script"
      when: ov_hardware_name is undefined 

    - name: Power Off compute in order to remove the profile
      hpe.oneview.oneview_server_hardware:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        state: power_state_set
        data:
          name : '{{ ov_hardware_name }}'
          powerStateData:
            powerState: "Off"
            powerControl: "PressAndHold"
      delegate_to: localhost
      
    - name: Retrieve info of  server profile template 
      hpe.oneview.oneview_server_profile_template_facts:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        name: "{{ ov_template }}"
      delegate_to: localhost

    - name: show the details of the server profile template
      debug:
        var: server_profile_templates

    - name: Create profile from template and assign to compute
      hpe.oneview.oneview_server_profile:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        data:
          name: "{{ ov_profile }}"
          serverProfileTemplateName: "{{ ov_template }}"
          serverHardwareName: "{{ ov_hardware_name }}"
        params:
          force: True
      delegate_to: localhost

    - name: Ensure profile state is compliant
      hpe.oneview.oneview_server_profile:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        state: "compliant"
        data:
          name: "{{ ov_profile }}"
      delegate_to: localhost

    - name: Gather sso iLO url facts about a Server Hardware
      hpe.oneview.oneview_server_hardware_facts:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        name: "{{ ov_hardware_name }}"
        options:
          - remoteConsoleUrl
      delegate_to: localhost
 
    - name: Power Off the server hardware
      hpe.oneview.oneview_server_hardware:
        hostname: "{{ hostvars[oneview_host].ansible_host }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        #auth_login_domain: "{{ oneview_domain }}"
        api_version: "{{ oneview_apiversion }}"
        state: power_state_set
        data:
            name : '{{ ov_hardware_name }}'
            powerStateData:
                powerState: "Off"
                powerControl: "PressAndHold"
      delegate_to: localhost

